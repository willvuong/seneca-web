{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/content.component.html","webpack:///./src/app/content.component.ts","webpack:///./src/app/data/employee.service.ts","webpack:///./src/app/data/position.service.ts","webpack:///./src/app/employee.component.html","webpack:///./src/app/employee.component.ts","webpack:///./src/app/employees.component.html","webpack:///./src/app/employees.component.ts","webpack:///./src/app/footer.component.html","webpack:///./src/app/footer.component.ts","webpack:///./src/app/home.component.html","webpack:///./src/app/home.component.ts","webpack:///./src/app/nav.component.html","webpack:///./src/app/nav.component.ts","webpack:///./src/app/page-not-found.component.html","webpack:///./src/app/page-not-found.component.ts","webpack:///./src/app/position.component.html","webpack:///./src/app/position.component.ts","webpack:///./src/app/positions.component.html","webpack:///./src/app/positions.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { EmployeesComponent } from './employees.component';\nimport { PositionsComponent } from './positions.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { EmployeeComponent } from './employee.component'\nimport { PositionComponent } from './position.component'\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'employees', component: EmployeesComponent },\n  { path: 'positions', component: PositionsComponent },\n  { path: 'employee/:_id', component: EmployeeComponent },\n  { path: 'position/:_id', component: PositionComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-nav></app-nav>\\n<app-content></app-content>\\n<app-footer></app-footer>\\n\"","/*********************************************************************************\n* WEB422 – Assignment 06\n* I declare that this assignment is my own work in accordance with Seneca Academic Policy. No part of this\n* assignment has been copied manually or electronically from any other source (including web sites) or\n* distributed to other students.\n*\n* Name: William Vuong Student ID: 105165179 Date: November 30, 2018\n*\n* Heroku Link: _______________________________________________________________\n*\n********************************************************************************/\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav.component';\nimport { ContentComponent } from './content.component';\nimport { FooterComponent } from './footer.component';\nimport { HomeComponent } from './home.component';\nimport { EmployeesComponent } from './employees.component';\nimport { PositionsComponent } from './positions.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { PositionService } from 'src/app/data/position.service';\nimport { EmployeeService } from 'src/app/data/employee.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { EmployeeComponent } from './employee.component';\nimport { PositionComponent } from './position.component';\nimport { FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    ContentComponent,\n    FooterComponent,\n    HomeComponent,\n    EmployeesComponent,\n    PositionsComponent,\n    PageNotFoundComponent,\n    EmployeeComponent,\n    PositionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [PositionService, EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n<!-- <app-home></app-home>\\r\\n<app-employees></app-employees>\\r\\n<app-positions></app-positions> -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styles: []\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Employee } from \"./employee\"\nimport { EmployeeRaw } from \"./employeeRaw\"\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EmployeeService {\n  private url = \"https://nameless-earth-78519.herokuapp.com/employees\";\n  \n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(this.url);\n  }\n\n  saveEmployee(employee: EmployeeRaw): Observable<any[]> {\n    return this.http.put<any[]>('https://nameless-earth-78519.herokuapp.com/employee/'+ employee._id, employee);\n  }\n\n  getEmployee(id): Observable<EmployeeRaw[]> {\n    return this.http.get<EmployeeRaw[]>('https://nameless-earth-78519.herokuapp.com/employee-raw/'+ id);\n  }  \n}","import { Injectable } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Position } from \"./position\"\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PositionService {\n  private url = \"https://nameless-earth-78519.herokuapp.com/positions\";\n\n  constructor(private http: HttpClient) { }\n\n  getPositions(): Observable<Position[]> {\n    return this.http.get<Position[]>(this.url)\n  }\n\n  savePosition(position: Position): Observable<any[]> {\n    return this.http.put<any[]>('https://nameless-earth-78519.herokuapp.com/position/'+ position._id, position);\n  }\n\n  getPosition(id): Observable<Position[]> {\n    return this.http.get<Position[]>('https://nameless-earth-78519.herokuapp.com/position/'+ id);\n  }  \n}","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Employee: {{employee.FirstName}} {{employee.LastName}}</h2>\\n  <p class=\\\"lead\\\">Updating Employee</p>\\n</div>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-12\\\">\\n  <form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':FirstName.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"FirstName\\\">First Name:</label>\\n          <input [(ngModel)]=\\\"employee.FirstName\\\" #FirstName='ngModel' class=\\\"form-control\\\" id=\\\"FirstName\\\" type=\\\"text\\\"  name=\\\"FirstName\\\" required/>\\n          <span *ngIf=\\\"FirstName.errors && FirstName.errors.required\\\" class=\\\"help-block\\\">First name is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':LastName.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"LastName\\\">Last Name:</label>\\n          <input [(ngModel)]=\\\"employee.LastName\\\" #LastName='ngModel' class=\\\"form-control\\\" id=\\\"LastName\\\" type=\\\"text\\\" name=\\\"LastName\\\" required />\\n          <span *ngIf=\\\"LastName.errors && LastName.errors.required\\\" class=\\\"help-block\\\">Last name is required.</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\" for=\\\"Position\\\">Position:</label>\\n          <select [(ngModel)]=\\\"employee.Position\\\" class=\\\"form-control\\\" id=\\\"Position\\\"  name=\\\"Position\\\">\\n            <option *ngFor=\\\"let p of positions\\\" [value]=\\\"p._id\\\">{{p.PositionName}}</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':SalaryBonus.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"SalaryBonus\\\">Salary Bonus</label>\\n          <div class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">$</span>\\n            <input [(ngModel)]=\\\"employee.SalaryBonus\\\" #SalaryBonus=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"SalaryBonus\\\" type=\\\"number\\\" name=\\\"SalaryBonus\\\" type=\\\"number\\\" required/>\\n            <span *ngIf=\\\"SalaryBonus.errors && SalaryBonus.errors.required\\\" class=\\\"help-block\\\">Salary bonus is required.</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':AddressStreet.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"AddressStreet\\\">Address (Street):</label>\\n          <input [(ngModel)]=\\\"employee.AddressStreet\\\" #AddressStreet=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"AddressStreet\\\" type=\\\"text\\\" name=\\\"AddressStreet\\\" required/>\\n          <span *ngIf=\\\"AddressStreet.errors && AddressStreet.errors.required\\\" class=\\\"help-block\\\">Street address is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':AddressCity.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"AddressCity\\\">Address (City):</label>\\n          <input [(ngModel)]=\\\"employee.AddressCity\\\" #AddressCity=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"AddressCity\\\" type=\\\"text\\\" name=\\\"AddressCity\\\" required/>\\n          <span *ngIf=\\\"AddressCity.errors && AddressCity.errors.required\\\" class=\\\"help-block\\\">City is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':AddressState.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"AddressState\\\">Address (State):</label>\\n          <input [(ngModel)]=\\\"employee.AddressState\\\" #AddressState=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"AddressState\\\" type=\\\"text\\\" name=\\\"AddressState\\\" required/>\\n          <span *ngIf=\\\"AddressState.errors && AddressState.errors.required\\\" class=\\\"help-block\\\">State is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':AddressZip.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"AddressZip\\\">Address (Zip Code):</label>\\n          <input [(ngModel)]=\\\"employee.AddressZip\\\" #AddressZip=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"AddressZip\\\" type=\\\"text\\\" name=\\\"AddressZip\\\" required />\\n          <span *ngIf=\\\"AddressZip.errors && AddressZip.errors.required\\\" class=\\\"help-block\\\">Zip code is required.</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':PhoneNum.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"PhoneNum\\\">Phone Number:</label>\\n          <input [(ngModel)]=\\\"employee.PhoneNum\\\" #PhoneNum=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"PhoneNum\\\" type=\\\"text\\\" name=\\\"PhoneNum\\\" pattern=\\\"\\\\+?[ ]*[1-9]?[ ]*\\\\-?[ ]*\\\\(?[ ]*[1-9][ ]*(\\\\d[ ]*){2}\\\\)?[ ]*\\\\-?[ ]*(\\\\d[ ]*){3}-[ ]*(\\\\d[\\n          ]*){4}\\\" required/>\\n          <span *ngIf=\\\"PhoneNum.errors && PhoneNum.errors.required\\\" class=\\\"help-block\\\">Phone number is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':Extension.errors}\\\">\\n          <label class=\\\"control-label\\\" for=\\\"Extension\\\">Extension:</label>\\n          <input [(ngModel)]=\\\"employee.Extension\\\" #Extension=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"Extension\\\" type=\\\"text\\\" name=\\\"Extension\\\" type=\\\"number\\\" required/>\\n          <span *ngIf=\\\"Extension.errors && Extension.errors.required\\\" class=\\\"help-block\\\">Phone extension is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\" for=\\\"HireDate\\\">Hire Date:</label>\\n          <input [value]=\\\"employee.HireDate | date:'longDate'\\\" readonly class=\\\"form-control\\\" id=\\\"HireDate\\\" name=\\\"HireDate\\\" type=\\\"text\\\" value=\\\"HireDate\\\" readonly />\\n        </div>\\n      </div>\\n    </div>\\n    <hr />\\n    <a routerLink=\\\"/employees\\\" class=\\\"btn btn-warning pull-left\\\">Return to Employee List</a>\\n    <input [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" value=\\\"Update Employee\\\" />\\n    <br />\\n    <br />\\n  </form>\\n</div>\\n</div>\\n<br />\\n<div *ngIf=\\\"successMessage\\\" class=\\\"alert alert-success\\\">\\n  <strong>Success!</strong> {{employee.FirstName}} {{employee.LastName}}'s information was successfully saved.\\n</div>\\n<div *ngIf=\\\"failMessage\\\" class=\\\"alert alert-danger\\\">\\n  <strong>Error!</strong> {{employee.FirstName}} {{employee.LastName}}'s information could not be saved.\\n</div>\\n</div>\\n<br /><br />\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeRaw } from './data/employeeRaw';\nimport { Position } from './data/position';\nimport { EmployeeService } from './data/employee.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PositionService } from './data/position.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styles: ['/employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  paramSubscription: any;\n  employeeSubscription: any;\n  getPositionsSubcription: any;\n  saveEmployeeSubscription: any;\n  employee: EmployeeRaw;\n  positions: Position[];\n  successMessage: boolean = false;\n  failMessage: boolean = false;\n\n  constructor(private employeeService: EmployeeService, private activatedRoute: ActivatedRoute, private positionService: PositionService) { }\n\n  ngOnInit() {\n    this.paramSubscription = this.activatedRoute.params.subscribe(params => {\n      this.employeeSubscription = this.employeeService.getEmployee(params['_id']).subscribe((tempEmployee) => {\n        this.employee = tempEmployee[0];\n        this.getPositionsSubcription = this.positionService.getPositions().subscribe(tempPositions => {\n          this.positions = tempPositions;\n        })\n      })\n    })\n  }\n\n  onSubmit(f: NgForm): void {\n    this.saveEmployeeSubscription = this.employeeService.saveEmployee(this.employee).subscribe(tempEmployee => {\n      this.successMessage = true;\n      setTimeout(() => { this.failMessage = false }, 2500);\n    }, error => {\n      this.failMessage = true;\n      setTimeout(() => { this.failMessage = false }, 2500);\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.paramSubscription != null) { this.paramSubscription.unsubscribe() }\n    if (this.employeeSubscription != null) { this.employeeSubscription.unsubscribe() }\n    if (this.getPositionsSubcription != null) { this.getPositionsSubcription.unsubscribe() }\n    if (this.saveEmployeeSubscription != null) { this.saveEmployeeSubscription.unsubscribe() }\n  }\n}\n","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Employees</h2>\\n  <p class=\\\"lead\\\">This table shows all of the employed employees and their personal information.</p>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <input class=\\\"form-control\\\" id=\\\"EmployeeSearch\\\" name=\\\"EmployeeSearch\\\" type=\\\"text\\\" placeholder=\\\"Search\\n        Employees by Full Name or Position\\\" (keyup)=\\\"onEmployeeSearchKeyUP($event)\\\" /><br />\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-condensed table-hover\\\">\\n          <thead>\\n            <tr>\\n              <td>Full Name</td>\\n              <td>Address</td>\\n              <td>Phone Number</td>\\n              <td>Hire Date</td>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let e of filteredEmployees\\\" (click)=\\\"routeEmployee(e._id)\\\">\\n              <td>{{e.FirstName}} {{e.LastName}}</td>\\n              <td>{{e.AddressStreet}} {{e.AddressState}} {{e.AddressCity}} {{e.AddressZip}}</td>\\n              <td>{{e.PhoneNum}} ext:{{e.Extension}}</td>\\n              <td>{{e.HireDate | date:'longDate'}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from \"./data/employee\";\nimport { EmployeeService } from \"./data/employee.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styles: ['/employees.component.css']\n})\n\nexport class EmployeesComponent implements OnInit {\n  employees: Employee[];\n  filteredEmployees: Employee[];\n  getEmployeeSub: any;\n  loadingError: boolean = false;\n\n  constructor(private empServ: EmployeeService, private router: Router) { }\n\n  routeEmployee(id: string) {\n    this.router.navigate(['/employee', id]);\n  }\n\n  ngOnInit() {\n    this.getEmployeeSub = this.empServ.getEmployees().subscribe(e => this.employees = e, () => {\n      this.loadingError = true;\n    })\n    this.getEmployeeSub = this.empServ.getEmployees().subscribe(e => this.filteredEmployees = e, () => {\n      this.loadingError = true;\n    })\n  }\n\n  onEmployeeSearchKeyUP(event: any) {\n    this.filteredEmployees = this.employees.filter((tempEmployee) => {\n      return (\n        tempEmployee.FirstName.toLowerCase().includes(event.target.value.toLowerCase()) ||\n        tempEmployee.LastName.toLowerCase().includes(event.target.value.toLowerCase()) ||\n        tempEmployee.Position.PositionName.toLowerCase().includes(event.target.value.toLowerCase()))\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.getEmployeeSub) {\n      this.getEmployeeSub.unsubscribe();\n    }\n  }\n\n}","module.exports = \"<div class=\\\"color-border\\\"> </div>\\n\\n<footer id=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">Copyright &copy; 2018 William Vuong WEB422 <a href=\\\"http://www.templategarden.com\\\" rel=\\\"nofollow\\\">TemplateGarden</a></div>\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"follow-us\\\"> <a class=\\\"fa fa-facebook social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-twitter social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-linkedin social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-google-plus social-icon\\\" href=\\\"#\\\"></a> </div>\\n      </div>\\n    </div>\\n  </div>\\n</footer>\\n<!--/#footer--> \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: []\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section id=\\\"main-slider\\\" class=\\\"no-margin\\\">\\n  <div class=\\\"carousel slide\\\">\\n    <ol class=\\\"carousel-indicators\\\">\\n      <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n      <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"1\\\"></li>\\n      <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"2\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div class=\\\"item active\\\" style=\\\"background-image: url(/assets/images/slider/bg1.jpg)\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row slide-margin\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"carousel-content\\\">\\n                <h1>Welcome to <span class=\\\"logo\\\"><i class=\\\"fa fa-play-circle\\\"></i> API Demo</span></h1>\\n                <h2>Lorem ipsum dolor sit amet, consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt laoreet</h2>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!--/.item-->\\n      \\n      <div class=\\\"item\\\" style=\\\"background-image: url(/assets/images/slider/bg2.jpg)\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row slide-margin\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"carousel-content\\\">\\n                <h1>Typi non habent claritatem insitam</h1>\\n                <h2>Lorem ipsum dolor sit amet, consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt laoreet</h2>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!--/.item-->\\n      \\n      <div class=\\\"item\\\" style=\\\"background-image: url(/assets/images/slider/bg3.jpg)\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row slide-margin\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"carousel-content\\\">\\n                <h1>Mirum est notare quam littera gothica</h1>\\n                <h2>Lorem ipsum dolor sit amet, consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt laoreet</h2>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!--/.item--> \\n    </div>\\n    <!--/.carousel-inner--> \\n  </div>\\n  <!--/.carousel--> \\n  <a class=\\\"prev hidden-xs\\\" href=\\\"#main-slider\\\" data-slide=\\\"prev\\\"> <i class=\\\"fa fa-chevron-left\\\"></i> </a> <a class=\\\"next hidden-xs\\\" href=\\\"#main-slider\\\" data-slide=\\\"next\\\"> <i class=\\\"fa fa-chevron-right\\\"></i> </a> </section>\\n<!--/#main-slider-->\\n<div class=\\\"color-border\\\"> </div>\\n<section id=\\\"feature\\\" >\\n  <div class=\\\"container\\\">\\n    <div class=\\\"center\\\">\\n      <h2>Featured Services</h2>\\n      <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique bibendum. Nunc quis semper sem.<br>\\n        Morbi libero elit elementum quis faucibus ac, condimentum quis nibh.</p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"features\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"feature-wrap\\\"> <i class=\\\"fa fa-desktop\\\"></i>\\n            <h2>Employees</h2>\\n            <h3>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique.</h3>\\n          </div>\\n        </div>\\n        <!--/.col-md-4-->\\n        \\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"feature-wrap\\\"> <i class=\\\"fa fa-cogs\\\"></i>\\n            <h2>Positions</h2>\\n            <h3>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique.</h3>\\n          </div>\\n        </div>\\n        \\n      </div>\\n      <!--/.services--> \\n    </div>\\n    <!--/.row--> \\n  </div>\\n  <!--/.container--> \\n</section>\\n<!--/#feature-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header id=\\\"header\\\">\\n  <nav class=\\\"navbar navbar-inverse\\\" role=\\\"banner\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\"> <span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> </button>\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"index.html\\\"><i class=\\\"fa fa-play-circle\\\"></i> William Vuong (API Demo)</a></div>\\n      <div class=\\\"collapse navbar-collapse navbar-right\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/home\\\">Home</a></li>\\n          <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/employees\\\">Employees</a></li>\\n          <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/positions\\\">Positions</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n    <!--/.container--> \\n  </nav>\\n  <!--/nav--> \\n  \\n</header>\\n<!--/header-->\\n\\n<div class=\\\"color-border\\\"> </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styles: []\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"colmd-12\\\">Not Found</div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styles: []\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Position: {{position.PositionName}}</h2>\\n  <p class=\\\"lead\\\">Updating Position</p>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':PositionName.errors}\\\">\\n              <label class=\\\"control-label\\\" for=\\\"PositionName\\\">Position Name:</label>\\n              <input [(ngModel)]=\\\"position.PositionName\\\" #PositionName='ngModel'class=\\\"form-control\\\" id=\\\"PositionName\\\" type=\\\"text\\\" name=\\\"PositionName\\\" required/>\\n              <span *ngIf=\\\"PositionName.errors && PositionName.errors.required\\\" class=\\\"help-block\\\">Position name is required.</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':PositionDescription.errors}\\\">\\n              <label class=\\\"control-label\\\" for=\\\"PositionDescription\\\">Description:</label>\\n              <textarea [(ngModel)]=\\\"position.PositionDescription\\\" #PositionDescription='ngModel'class=\\\"form-control\\\" id=\\\"PositionDescription\\\" rows=\\\"5\\\" name=\\\"PositionDescription\\\" required></textarea>\\n              <span *ngIf=\\\"PositionDescription.errors && PositionDescription.errors.required\\\" class=\\\"help-block\\\">Position description is required.</span>\\n            </div>\\n          </div>\\n        </div>\\n        <hr />\\n        <a routerLink=\\\"/positions\\\" class=\\\"btn btn-warning pull-left\\\">Return to Position List</a>\\n        <input [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" value=\\\"Update Position\\\" />\\n        <br />\\n        <br />\\n      </form>\\n    </div>\\n  </div>\\n<br />\\n<div *ngIf=\\\"successMessage\\\" class=\\\"alert alert-success\\\">\\n  <strong>Success!</strong> Position: {{position.PositionName}} was successfully saved.\\n</div>\\n<div *ngIf=\\\"failMessage\\\" class=\\\"alert alert-danger\\\">\\n  <strong>Error!</strong> Position: {{position.PositionName}} could not be saved.\\n</div>\\n</div>\\n<br /><br />\"","import { Component, OnInit } from '@angular/core';\nimport { Position } from './data/position';\nimport { PositionService } from './data/position.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-position',\n  templateUrl: './position.component.html',\n  styles: ['/position.component.css']\n})\nexport class PositionComponent implements OnInit {\n  paramSubscription: any;\n  positionSubscription: any;\n  savePositionSubscription: any;\n  position: Position;\n  successMessage: boolean = false\n  failMessage: boolean = false\n\n  constructor(private positionService: PositionService, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.paramSubscription = this.activatedRoute.params.subscribe((params) => {\n      this.positionSubscription = this.positionService.getPosition(params['_id']).subscribe(tempPositions => [\n        this.position = tempPositions[0]\n      ])\n    })\n  }\n\n  onSubmit(f: NgForm): void {\n    this.savePositionSubscription = this.positionService.savePosition(this.position).subscribe(tempPosition => {\n      this.successMessage = true;\n      setTimeout(() => { this.successMessage = false }, 2500);\n    }, error => {\n      this.failMessage = true;\n      setTimeout(() => { this.failMessage = false }, 2500);\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.paramSubscription != null) { this.paramSubscription.unsubscribe() }\n    if (this.positionSubscription != null) { this.positionSubscription.unsubscribe() }\n    if (this.savePositionSubscription != null) { this.savePositionSubscription.unsubscribe() }\n  }\n\n}\n","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Positions</h2>\\n  <p class=\\\"lead\\\">This table shows the job positions, its duties, and salary the position makes.</p>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-condensed table-hover\\\">\\n        <thead>\\n        <tr>\\n          <td>Position Title</td>\\n          <td>Position Description</td>\\n          <td>Salary</td>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let p of positions\\\" (click)=\\\"routePosition(p._id)\\\">\\n          <td>{{p.PositionName}}</td>\\n          <td>{{p.PositionDescription}}</td>\\n          <td>${{p.PositionBaseSalary | number: '.2'}}</td>\\n        </tr>\\n        </tbody>\\n        </table>\\n       </div>\\n       \\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Position } from \"./data/position\";\nimport { PositionService } from \"./data/position.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-positions',\n  templateUrl: './positions.component.html',\n  styles: ['./positions.component.css']\n})\n\nexport class PositionsComponent implements OnInit {\n  positions: Position[];\n  getPositionSub: any;\n  loadingError: boolean = false;\n\n  constructor(private posServ: PositionService, private router: Router) { }\n\n  routePosition(id:string) {\n    this.router.navigate(['/position', id]);\n  }\n\n  ngOnInit() {\n    this.getPositionSub = this.posServ.getPositions().subscribe(p => this.positions = p, () => {\n      this.loadingError = true;\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.getPositionSub) {\n      this.getPositionSub.unsubscribe();\n    }\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}